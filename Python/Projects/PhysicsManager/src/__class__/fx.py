class CylindricalLens:
    ...
    DtoolClassDict:dict = None
    def DtoolGetSuperBase(self, /): ...
    FCAspectRatio:int = None
    FCCameraPlane:int = None
    FCKeystone:int = None
    FCOffAxis:int = None
    FCRoll:int = None
    FCShear:int = None
    FC_aspect_ratio:int = None
    FC_camera_plane:int = None
    FC_keystone:int = None
    FC_off_axis:int = None
    FC_roll:int = None
    FC_shear:int = None
    SCLeft:int = None
    SCMono:int = None
    SCRight:int = None
    SCStereo:int = None
    SC_left:int = None
    SC_mono:int = None
    SC_right:int = None
    SC_stereo:int = None
    aspect_ratio = None
    change_event = None
    def clear(self, /): ...
    def clearCustomFilmMat(self, /): ...
    def clearKeystone(self, /): ...
    def clearViewMat(self, /): ...
    def clear_custom_film_mat(self, /): ...
    def clear_keystone(self, /): ...
    def clear_view_mat(self, /): ...
    convergence_distance = None
    coordinate_system = None
    def decodeFromBamStream(): ...
    def decode_from_bam_stream(): ...
    def encodeToBamStream(): ...
    def encode_to_bam_stream(): ...
    def extrude(): ...
    def extrudeDepth(): ...
    def extrudeVec(): ...
    def extrude_depth(): ...
    def extrude_vec(): ...
    far = None
    def fillin(): ...
    film_offset = None
    film_size = None
    focal_length = None
    fov = None
    def getAspectRatio(self, /): ...
    def getBamModified(self, /): ...
    def getChangeEvent(self, /): ...
    def getClassType(): ...
    def getConvergenceDistance(self, /): ...
    def getCoordinateSystem(self, /): ...
    def getCustomFilmMat(self, /): ...
    def getDefaultFar(): ...
    def getDefaultNear(): ...
    def getFar(self, /): ...
    def getFilmMat(self, /): ...
    def getFilmMatInv(self, /): ...
    def getFilmOffset(self, /): ...
    def getFilmSize(self, /): ...
    def getFocalLength(self, /): ...
    def getFov(self, /): ...
    def getHfov(self, /): ...
    def getInterocularDistance(self, /): ...
    def getKeystone(self, /): ...
    def getLastChange(self, /): ...
    def getLensMat(self, /): ...
    def getLensMatInv(self, /): ...
    def getMinFov(self, /): ...
    def getNear(self, /): ...
    def getNodalPoint(self, /): ...
    def getProjectionMat(): ...
    def getProjectionMatInv(): ...
    def getRefCount(self, /): ...
    def getType(self, /): ...
    def getTypeIndex(self, /): ...
    def getUpVector(self, /): ...
    def getVfov(self, /): ...
    def getViewHpr(self, /): ...
    def getViewMat(self, /): ...
    def getViewVector(self, /): ...
    def get_aspect_ratio(self, /): ...
    def get_bam_modified(self, /): ...
    def get_change_event(self, /): ...
    def get_class_type(): ...
    def get_convergence_distance(self, /): ...
    def get_coordinate_system(self, /): ...
    def get_custom_film_mat(self, /): ...
    def get_default_far(): ...
    def get_default_near(): ...
    def get_far(self, /): ...
    def get_film_mat(self, /): ...
    def get_film_mat_inv(self, /): ...
    def get_film_offset(self, /): ...
    def get_film_size(self, /): ...
    def get_focal_length(self, /): ...
    def get_fov(self, /): ...
    def get_hfov(self, /): ...
    def get_interocular_distance(self, /): ...
    def get_keystone(self, /): ...
    def get_last_change(self, /): ...
    def get_lens_mat(self, /): ...
    def get_lens_mat_inv(self, /): ...
    def get_min_fov(self, /): ...
    def get_near(self, /): ...
    def get_nodal_point(self, /): ...
    def get_projection_mat(): ...
    def get_projection_mat_inv(): ...
    def get_ref_count(self, /): ...
    def get_type(self, /): ...
    def get_type_index(self, /): ...
    def get_up_vector(self, /): ...
    def get_vfov(self, /): ...
    def get_view_hpr(self, /): ...
    def get_view_mat(self, /): ...
    def get_view_vector(self, /): ...
    interocular_distance = None
    def isExactType(self, object, /): ...
    def isLinear(self, /): ...
    def isOfType(self, object, /): ...
    def isOrthographic(self, /): ...
    def isPerspective(self, /): ...
    def is_exact_type(self, object, /): ...
    def is_linear(self, /): ...
    def is_of_type(self, object, /): ...
    def is_orthographic(self, /): ...
    def is_perspective(self, /): ...
    keystone = None
    def makeBounds(self, /): ...
    def makeCopy(self, /): ...
    def makeGeometry(self, /): ...
    def make_bounds(self, /): ...
    def make_copy(self, /): ...
    def make_geometry(self, /): ...
    def markBamModified(self, /): ...
    def mark_bam_modified(self, /): ...
    min_fov = None
    near = None
    nodal_point = None
    def output(self, object, /): ...
    def project(): ...
    def recomputeAll(self, /): ...
    def recompute_all(self, /): ...
    def ref(self, /): ...
    ref_count = None
    def setAspectRatio(self, object, /): ...
    def setChangeEvent(self, object, /): ...
    def setConvergenceDistance(self, object, /): ...
    def setCoordinateSystem(self, object, /): ...
    def setCustomFilmMat(self, object, /): ...
    def setFar(self, object, /): ...
    def setFilmOffset(): ...
    def setFilmSize(): ...
    def setFocalLength(self, object, /): ...
    def setFov(): ...
    def setFrustumFromCorners(): ...
    def setInterocularDistance(self, object, /): ...
    def setKeystone(self, object, /): ...
    def setMinFov(self, object, /): ...
    def setNear(self, object, /): ...
    def setNearFar(): ...
    def setViewHpr(): ...
    def setViewMat(self, object, /): ...
    def setViewVector(): ...
    def set_aspect_ratio(self, object, /): ...
    def set_change_event(self, object, /): ...
    def set_convergence_distance(self, object, /): ...
    def set_coordinate_system(self, object, /): ...
    def set_custom_film_mat(self, object, /): ...
    def set_far(self, object, /): ...
    def set_film_offset(): ...
    def set_film_size(): ...
    def set_focal_length(self, object, /): ...
    def set_fov(): ...
    def set_frustum_from_corners(): ...
    def set_interocular_distance(self, object, /): ...
    def set_keystone(self, object, /): ...
    def set_min_fov(self, object, /): ...
    def set_near(self, object, /): ...
    def set_near_far(): ...
    def set_view_hpr(): ...
    def set_view_mat(self, object, /): ...
    def set_view_vector(): ...
    def testRefCountIntegrity(self, /): ...
    def testRefCountNonzero(self, /): ...
    def test_ref_count_integrity(self, /): ...
    def test_ref_count_nonzero(self, /): ...
    this = None
    this_const = None
    this_metatype = None
    this_ownership = None
    type = None
    def unref(self, /): ...
    def upcastToReferenceCount(self, /): ...
    def upcastToTypedWritable(self, /): ...
    def upcast_to_ReferenceCount(self, /): ...
    def upcast_to_TypedWritable(self, /): ...
    view_hpr = None
    view_mat = None
    def write(): ...
def Dtool_BorrowThisReference(): ...
Dtool_PyNativeInterface:int = None
class FisheyeLens:
    ...
    DtoolClassDict:dict = None
    def DtoolGetSuperBase(self, /): ...
    FCAspectRatio:int = None
    FCCameraPlane:int = None
    FCKeystone:int = None
    FCOffAxis:int = None
    FCRoll:int = None
    FCShear:int = None
    FC_aspect_ratio:int = None
    FC_camera_plane:int = None
    FC_keystone:int = None
    FC_off_axis:int = None
    FC_roll:int = None
    FC_shear:int = None
    SCLeft:int = None
    SCMono:int = None
    SCRight:int = None
    SCStereo:int = None
    SC_left:int = None
    SC_mono:int = None
    SC_right:int = None
    SC_stereo:int = None
    aspect_ratio = None
    change_event = None
    def clear(self, /): ...
    def clearCustomFilmMat(self, /): ...
    def clearKeystone(self, /): ...
    def clearViewMat(self, /): ...
    def clear_custom_film_mat(self, /): ...
    def clear_keystone(self, /): ...
    def clear_view_mat(self, /): ...
    convergence_distance = None
    coordinate_system = None
    def decodeFromBamStream(): ...
    def decode_from_bam_stream(): ...
    def encodeToBamStream(): ...
    def encode_to_bam_stream(): ...
    def extrude(): ...
    def extrudeDepth(): ...
    def extrudeVec(): ...
    def extrude_depth(): ...
    def extrude_vec(): ...
    far = None
    def fillin(): ...
    film_offset = None
    film_size = None
    focal_length = None
    fov = None
    def getAspectRatio(self, /): ...
    def getBamModified(self, /): ...
    def getChangeEvent(self, /): ...
    def getClassType(): ...
    def getConvergenceDistance(self, /): ...
    def getCoordinateSystem(self, /): ...
    def getCustomFilmMat(self, /): ...
    def getDefaultFar(): ...
    def getDefaultNear(): ...
    def getFar(self, /): ...
    def getFilmMat(self, /): ...
    def getFilmMatInv(self, /): ...
    def getFilmOffset(self, /): ...
    def getFilmSize(self, /): ...
    def getFocalLength(self, /): ...
    def getFov(self, /): ...
    def getHfov(self, /): ...
    def getInterocularDistance(self, /): ...
    def getKeystone(self, /): ...
    def getLastChange(self, /): ...
    def getLensMat(self, /): ...
    def getLensMatInv(self, /): ...
    def getMinFov(self, /): ...
    def getNear(self, /): ...
    def getNodalPoint(self, /): ...
    def getProjectionMat(): ...
    def getProjectionMatInv(): ...
    def getRefCount(self, /): ...
    def getType(self, /): ...
    def getTypeIndex(self, /): ...
    def getUpVector(self, /): ...
    def getVfov(self, /): ...
    def getViewHpr(self, /): ...
    def getViewMat(self, /): ...
    def getViewVector(self, /): ...
    def get_aspect_ratio(self, /): ...
    def get_bam_modified(self, /): ...
    def get_change_event(self, /): ...
    def get_class_type(): ...
    def get_convergence_distance(self, /): ...
    def get_coordinate_system(self, /): ...
    def get_custom_film_mat(self, /): ...
    def get_default_far(): ...
    def get_default_near(): ...
    def get_far(self, /): ...
    def get_film_mat(self, /): ...
    def get_film_mat_inv(self, /): ...
    def get_film_offset(self, /): ...
    def get_film_size(self, /): ...
    def get_focal_length(self, /): ...
    def get_fov(self, /): ...
    def get_hfov(self, /): ...
    def get_interocular_distance(self, /): ...
    def get_keystone(self, /): ...
    def get_last_change(self, /): ...
    def get_lens_mat(self, /): ...
    def get_lens_mat_inv(self, /): ...
    def get_min_fov(self, /): ...
    def get_near(self, /): ...
    def get_nodal_point(self, /): ...
    def get_projection_mat(): ...
    def get_projection_mat_inv(): ...
    def get_ref_count(self, /): ...
    def get_type(self, /): ...
    def get_type_index(self, /): ...
    def get_up_vector(self, /): ...
    def get_vfov(self, /): ...
    def get_view_hpr(self, /): ...
    def get_view_mat(self, /): ...
    def get_view_vector(self, /): ...
    interocular_distance = None
    def isExactType(self, object, /): ...
    def isLinear(self, /): ...
    def isOfType(self, object, /): ...
    def isOrthographic(self, /): ...
    def isPerspective(self, /): ...
    def is_exact_type(self, object, /): ...
    def is_linear(self, /): ...
    def is_of_type(self, object, /): ...
    def is_orthographic(self, /): ...
    def is_perspective(self, /): ...
    keystone = None
    def makeBounds(self, /): ...
    def makeCopy(self, /): ...
    def makeGeometry(self, /): ...
    def make_bounds(self, /): ...
    def make_copy(self, /): ...
    def make_geometry(self, /): ...
    def markBamModified(self, /): ...
    def mark_bam_modified(self, /): ...
    min_fov = None
    near = None
    nodal_point = None
    def output(self, object, /): ...
    def project(): ...
    def recomputeAll(self, /): ...
    def recompute_all(self, /): ...
    def ref(self, /): ...
    ref_count = None
    def setAspectRatio(self, object, /): ...
    def setChangeEvent(self, object, /): ...
    def setConvergenceDistance(self, object, /): ...
    def setCoordinateSystem(self, object, /): ...
    def setCustomFilmMat(self, object, /): ...
    def setFar(self, object, /): ...
    def setFilmOffset(): ...
    def setFilmSize(): ...
    def setFocalLength(self, object, /): ...
    def setFov(): ...
    def setFrustumFromCorners(): ...
    def setInterocularDistance(self, object, /): ...
    def setKeystone(self, object, /): ...
    def setMinFov(self, object, /): ...
    def setNear(self, object, /): ...
    def setNearFar(): ...
    def setViewHpr(): ...
    def setViewMat(self, object, /): ...
    def setViewVector(): ...
    def set_aspect_ratio(self, object, /): ...
    def set_change_event(self, object, /): ...
    def set_convergence_distance(self, object, /): ...
    def set_coordinate_system(self, object, /): ...
    def set_custom_film_mat(self, object, /): ...
    def set_far(self, object, /): ...
    def set_film_offset(): ...
    def set_film_size(): ...
    def set_focal_length(self, object, /): ...
    def set_fov(): ...
    def set_frustum_from_corners(): ...
    def set_interocular_distance(self, object, /): ...
    def set_keystone(self, object, /): ...
    def set_min_fov(self, object, /): ...
    def set_near(self, object, /): ...
    def set_near_far(): ...
    def set_view_hpr(): ...
    def set_view_mat(self, object, /): ...
    def set_view_vector(): ...
    def testRefCountIntegrity(self, /): ...
    def testRefCountNonzero(self, /): ...
    def test_ref_count_integrity(self, /): ...
    def test_ref_count_nonzero(self, /): ...
    this = None
    this_const = None
    this_metatype = None
    this_ownership = None
    type = None
    def unref(self, /): ...
    def upcastToReferenceCount(self, /): ...
    def upcastToTypedWritable(self, /): ...
    def upcast_to_ReferenceCount(self, /): ...
    def upcast_to_TypedWritable(self, /): ...
    view_hpr = None
    view_mat = None
    def write(): ...
class NonlinearImager:
    ...
    DtoolClassDict:dict = None
    def DtoolGetSuperBase(self, /): ...
    def addScreen(): ...
    def addViewer(self, object, /): ...
    def add_screen(): ...
    def add_viewer(self, object, /): ...
    def findScreen(self, object, /): ...
    def findViewer(self, object, /): ...
    def find_screen(self, object, /): ...
    def find_viewer(self, object, /): ...
    def getBuffer(self, object, /): ...
    def getBuffers(self, /): ...
    def getDarkRoom(self, /): ...
    def getGraphicsEngine(self, /): ...
    def getNumScreens(self, /): ...
    def getNumViewers(self, /): ...
    def getScreen(self, object, /): ...
    def getScreenActive(self, object, /): ...
    def getScreens(self, /): ...
    def getViewer(self, object, /): ...
    def getViewerCamera(self, object, /): ...
    def getViewerScene(self, object, /): ...
    def getViewers(self, /): ...
    def get_buffer(self, object, /): ...
    def get_buffers(self, /): ...
    def get_dark_room(self, /): ...
    def get_graphics_engine(self, /): ...
    def get_num_screens(self, /): ...
    def get_num_viewers(self, /): ...
    def get_screen(self, object, /): ...
    def get_screen_active(self, object, /): ...
    def get_screens(self, /): ...
    def get_viewer(self, object, /): ...
    def get_viewer_camera(self, object, /): ...
    def get_viewer_scene(self, object, /): ...
    def get_viewers(self, /): ...
    def recompute(self, /): ...
    def removeAllScreens(self, /): ...
    def removeAllViewers(self, /): ...
    def removeScreen(self, object, /): ...
    def removeViewer(self, object, /): ...
    def remove_all_screens(self, /): ...
    def remove_all_viewers(self, /): ...
    def remove_screen(self, object, /): ...
    def remove_viewer(self, object, /): ...
    def setScreenActive(): ...
    def setSourceCamera(): ...
    def setTextureSize(): ...
    def setViewerCamera(): ...
    def set_screen_active(): ...
    def set_source_camera(): ...
    def set_texture_size(): ...
    def set_viewer_camera(): ...
    this = None
    this_const = None
    this_metatype = None
    this_ownership = None
class OSphereLens:
    ...
    DtoolClassDict:dict = None
    def DtoolGetSuperBase(self, /): ...
    FCAspectRatio:int = None
    FCCameraPlane:int = None
    FCKeystone:int = None
    FCOffAxis:int = None
    FCRoll:int = None
    FCShear:int = None
    FC_aspect_ratio:int = None
    FC_camera_plane:int = None
    FC_keystone:int = None
    FC_off_axis:int = None
    FC_roll:int = None
    FC_shear:int = None
    SCLeft:int = None
    SCMono:int = None
    SCRight:int = None
    SCStereo:int = None
    SC_left:int = None
    SC_mono:int = None
    SC_right:int = None
    SC_stereo:int = None
    aspect_ratio = None
    change_event = None
    def clear(self, /): ...
    def clearCustomFilmMat(self, /): ...
    def clearKeystone(self, /): ...
    def clearViewMat(self, /): ...
    def clear_custom_film_mat(self, /): ...
    def clear_keystone(self, /): ...
    def clear_view_mat(self, /): ...
    convergence_distance = None
    coordinate_system = None
    def decodeFromBamStream(): ...
    def decode_from_bam_stream(): ...
    def encodeToBamStream(): ...
    def encode_to_bam_stream(): ...
    def extrude(): ...
    def extrudeDepth(): ...
    def extrudeVec(): ...
    def extrude_depth(): ...
    def extrude_vec(): ...
    far = None
    def fillin(): ...
    film_offset = None
    film_size = None
    focal_length = None
    fov = None
    def getAspectRatio(self, /): ...
    def getBamModified(self, /): ...
    def getChangeEvent(self, /): ...
    def getClassType(): ...
    def getConvergenceDistance(self, /): ...
    def getCoordinateSystem(self, /): ...
    def getCustomFilmMat(self, /): ...
    def getDefaultFar(): ...
    def getDefaultNear(): ...
    def getFar(self, /): ...
    def getFilmMat(self, /): ...
    def getFilmMatInv(self, /): ...
    def getFilmOffset(self, /): ...
    def getFilmSize(self, /): ...
    def getFocalLength(self, /): ...
    def getFov(self, /): ...
    def getHfov(self, /): ...
    def getInterocularDistance(self, /): ...
    def getKeystone(self, /): ...
    def getLastChange(self, /): ...
    def getLensMat(self, /): ...
    def getLensMatInv(self, /): ...
    def getMinFov(self, /): ...
    def getNear(self, /): ...
    def getNodalPoint(self, /): ...
    def getProjectionMat(): ...
    def getProjectionMatInv(): ...
    def getRefCount(self, /): ...
    def getType(self, /): ...
    def getTypeIndex(self, /): ...
    def getUpVector(self, /): ...
    def getVfov(self, /): ...
    def getViewHpr(self, /): ...
    def getViewMat(self, /): ...
    def getViewVector(self, /): ...
    def get_aspect_ratio(self, /): ...
    def get_bam_modified(self, /): ...
    def get_change_event(self, /): ...
    def get_class_type(): ...
    def get_convergence_distance(self, /): ...
    def get_coordinate_system(self, /): ...
    def get_custom_film_mat(self, /): ...
    def get_default_far(): ...
    def get_default_near(): ...
    def get_far(self, /): ...
    def get_film_mat(self, /): ...
    def get_film_mat_inv(self, /): ...
    def get_film_offset(self, /): ...
    def get_film_size(self, /): ...
    def get_focal_length(self, /): ...
    def get_fov(self, /): ...
    def get_hfov(self, /): ...
    def get_interocular_distance(self, /): ...
    def get_keystone(self, /): ...
    def get_last_change(self, /): ...
    def get_lens_mat(self, /): ...
    def get_lens_mat_inv(self, /): ...
    def get_min_fov(self, /): ...
    def get_near(self, /): ...
    def get_nodal_point(self, /): ...
    def get_projection_mat(): ...
    def get_projection_mat_inv(): ...
    def get_ref_count(self, /): ...
    def get_type(self, /): ...
    def get_type_index(self, /): ...
    def get_up_vector(self, /): ...
    def get_vfov(self, /): ...
    def get_view_hpr(self, /): ...
    def get_view_mat(self, /): ...
    def get_view_vector(self, /): ...
    interocular_distance = None
    def isExactType(self, object, /): ...
    def isLinear(self, /): ...
    def isOfType(self, object, /): ...
    def isOrthographic(self, /): ...
    def isPerspective(self, /): ...
    def is_exact_type(self, object, /): ...
    def is_linear(self, /): ...
    def is_of_type(self, object, /): ...
    def is_orthographic(self, /): ...
    def is_perspective(self, /): ...
    keystone = None
    def makeBounds(self, /): ...
    def makeCopy(self, /): ...
    def makeGeometry(self, /): ...
    def make_bounds(self, /): ...
    def make_copy(self, /): ...
    def make_geometry(self, /): ...
    def markBamModified(self, /): ...
    def mark_bam_modified(self, /): ...
    min_fov = None
    near = None
    nodal_point = None
    def output(self, object, /): ...
    def project(): ...
    def recomputeAll(self, /): ...
    def recompute_all(self, /): ...
    def ref(self, /): ...
    ref_count = None
    def setAspectRatio(self, object, /): ...
    def setChangeEvent(self, object, /): ...
    def setConvergenceDistance(self, object, /): ...
    def setCoordinateSystem(self, object, /): ...
    def setCustomFilmMat(self, object, /): ...
    def setFar(self, object, /): ...
    def setFilmOffset(): ...
    def setFilmSize(): ...
    def setFocalLength(self, object, /): ...
    def setFov(): ...
    def setFrustumFromCorners(): ...
    def setInterocularDistance(self, object, /): ...
    def setKeystone(self, object, /): ...
    def setMinFov(self, object, /): ...
    def setNear(self, object, /): ...
    def setNearFar(): ...
    def setViewHpr(): ...
    def setViewMat(self, object, /): ...
    def setViewVector(): ...
    def set_aspect_ratio(self, object, /): ...
    def set_change_event(self, object, /): ...
    def set_convergence_distance(self, object, /): ...
    def set_coordinate_system(self, object, /): ...
    def set_custom_film_mat(self, object, /): ...
    def set_far(self, object, /): ...
    def set_film_offset(): ...
    def set_film_size(): ...
    def set_focal_length(self, object, /): ...
    def set_fov(): ...
    def set_frustum_from_corners(): ...
    def set_interocular_distance(self, object, /): ...
    def set_keystone(self, object, /): ...
    def set_min_fov(self, object, /): ...
    def set_near(self, object, /): ...
    def set_near_far(): ...
    def set_view_hpr(): ...
    def set_view_mat(self, object, /): ...
    def set_view_vector(): ...
    def testRefCountIntegrity(self, /): ...
    def testRefCountNonzero(self, /): ...
    def test_ref_count_integrity(self, /): ...
    def test_ref_count_nonzero(self, /): ...
    this = None
    this_const = None
    this_metatype = None
    this_ownership = None
    type = None
    def unref(self, /): ...
    def upcastToReferenceCount(self, /): ...
    def upcastToTypedWritable(self, /): ...
    def upcast_to_ReferenceCount(self, /): ...
    def upcast_to_TypedWritable(self, /): ...
    view_hpr = None
    view_mat = None
    def write(): ...
class PSphereLens:
    ...
    DtoolClassDict:dict = None
    def DtoolGetSuperBase(self, /): ...
    FCAspectRatio:int = None
    FCCameraPlane:int = None
    FCKeystone:int = None
    FCOffAxis:int = None
    FCRoll:int = None
    FCShear:int = None
    FC_aspect_ratio:int = None
    FC_camera_plane:int = None
    FC_keystone:int = None
    FC_off_axis:int = None
    FC_roll:int = None
    FC_shear:int = None
    SCLeft:int = None
    SCMono:int = None
    SCRight:int = None
    SCStereo:int = None
    SC_left:int = None
    SC_mono:int = None
    SC_right:int = None
    SC_stereo:int = None
    aspect_ratio = None
    change_event = None
    def clear(self, /): ...
    def clearCustomFilmMat(self, /): ...
    def clearKeystone(self, /): ...
    def clearViewMat(self, /): ...
    def clear_custom_film_mat(self, /): ...
    def clear_keystone(self, /): ...
    def clear_view_mat(self, /): ...
    convergence_distance = None
    coordinate_system = None
    def decodeFromBamStream(): ...
    def decode_from_bam_stream(): ...
    def encodeToBamStream(): ...
    def encode_to_bam_stream(): ...
    def extrude(): ...
    def extrudeDepth(): ...
    def extrudeVec(): ...
    def extrude_depth(): ...
    def extrude_vec(): ...
    far = None
    def fillin(): ...
    film_offset = None
    film_size = None
    focal_length = None
    fov = None
    def getAspectRatio(self, /): ...
    def getBamModified(self, /): ...
    def getChangeEvent(self, /): ...
    def getClassType(): ...
    def getConvergenceDistance(self, /): ...
    def getCoordinateSystem(self, /): ...
    def getCustomFilmMat(self, /): ...
    def getDefaultFar(): ...
    def getDefaultNear(): ...
    def getFar(self, /): ...
    def getFilmMat(self, /): ...
    def getFilmMatInv(self, /): ...
    def getFilmOffset(self, /): ...
    def getFilmSize(self, /): ...
    def getFocalLength(self, /): ...
    def getFov(self, /): ...
    def getHfov(self, /): ...
    def getInterocularDistance(self, /): ...
    def getKeystone(self, /): ...
    def getLastChange(self, /): ...
    def getLensMat(self, /): ...
    def getLensMatInv(self, /): ...
    def getMinFov(self, /): ...
    def getNear(self, /): ...
    def getNodalPoint(self, /): ...
    def getProjectionMat(): ...
    def getProjectionMatInv(): ...
    def getRefCount(self, /): ...
    def getType(self, /): ...
    def getTypeIndex(self, /): ...
    def getUpVector(self, /): ...
    def getVfov(self, /): ...
    def getViewHpr(self, /): ...
    def getViewMat(self, /): ...
    def getViewVector(self, /): ...
    def get_aspect_ratio(self, /): ...
    def get_bam_modified(self, /): ...
    def get_change_event(self, /): ...
    def get_class_type(): ...
    def get_convergence_distance(self, /): ...
    def get_coordinate_system(self, /): ...
    def get_custom_film_mat(self, /): ...
    def get_default_far(): ...
    def get_default_near(): ...
    def get_far(self, /): ...
    def get_film_mat(self, /): ...
    def get_film_mat_inv(self, /): ...
    def get_film_offset(self, /): ...
    def get_film_size(self, /): ...
    def get_focal_length(self, /): ...
    def get_fov(self, /): ...
    def get_hfov(self, /): ...
    def get_interocular_distance(self, /): ...
    def get_keystone(self, /): ...
    def get_last_change(self, /): ...
    def get_lens_mat(self, /): ...
    def get_lens_mat_inv(self, /): ...
    def get_min_fov(self, /): ...
    def get_near(self, /): ...
    def get_nodal_point(self, /): ...
    def get_projection_mat(): ...
    def get_projection_mat_inv(): ...
    def get_ref_count(self, /): ...
    def get_type(self, /): ...
    def get_type_index(self, /): ...
    def get_up_vector(self, /): ...
    def get_vfov(self, /): ...
    def get_view_hpr(self, /): ...
    def get_view_mat(self, /): ...
    def get_view_vector(self, /): ...
    interocular_distance = None
    def isExactType(self, object, /): ...
    def isLinear(self, /): ...
    def isOfType(self, object, /): ...
    def isOrthographic(self, /): ...
    def isPerspective(self, /): ...
    def is_exact_type(self, object, /): ...
    def is_linear(self, /): ...
    def is_of_type(self, object, /): ...
    def is_orthographic(self, /): ...
    def is_perspective(self, /): ...
    keystone = None
    def makeBounds(self, /): ...
    def makeCopy(self, /): ...
    def makeGeometry(self, /): ...
    def make_bounds(self, /): ...
    def make_copy(self, /): ...
    def make_geometry(self, /): ...
    def markBamModified(self, /): ...
    def mark_bam_modified(self, /): ...
    min_fov = None
    near = None
    nodal_point = None
    def output(self, object, /): ...
    def project(): ...
    def recomputeAll(self, /): ...
    def recompute_all(self, /): ...
    def ref(self, /): ...
    ref_count = None
    def setAspectRatio(self, object, /): ...
    def setChangeEvent(self, object, /): ...
    def setConvergenceDistance(self, object, /): ...
    def setCoordinateSystem(self, object, /): ...
    def setCustomFilmMat(self, object, /): ...
    def setFar(self, object, /): ...
    def setFilmOffset(): ...
    def setFilmSize(): ...
    def setFocalLength(self, object, /): ...
    def setFov(): ...
    def setFrustumFromCorners(): ...
    def setInterocularDistance(self, object, /): ...
    def setKeystone(self, object, /): ...
    def setMinFov(self, object, /): ...
    def setNear(self, object, /): ...
    def setNearFar(): ...
    def setViewHpr(): ...
    def setViewMat(self, object, /): ...
    def setViewVector(): ...
    def set_aspect_ratio(self, object, /): ...
    def set_change_event(self, object, /): ...
    def set_convergence_distance(self, object, /): ...
    def set_coordinate_system(self, object, /): ...
    def set_custom_film_mat(self, object, /): ...
    def set_far(self, object, /): ...
    def set_film_offset(): ...
    def set_film_size(): ...
    def set_focal_length(self, object, /): ...
    def set_fov(): ...
    def set_frustum_from_corners(): ...
    def set_interocular_distance(self, object, /): ...
    def set_keystone(self, object, /): ...
    def set_min_fov(self, object, /): ...
    def set_near(self, object, /): ...
    def set_near_far(): ...
    def set_view_hpr(): ...
    def set_view_mat(self, object, /): ...
    def set_view_vector(): ...
    def testRefCountIntegrity(self, /): ...
    def testRefCountNonzero(self, /): ...
    def test_ref_count_integrity(self, /): ...
    def test_ref_count_nonzero(self, /): ...
    this = None
    this_const = None
    this_metatype = None
    this_ownership = None
    type = None
    def unref(self, /): ...
    def upcastToReferenceCount(self, /): ...
    def upcastToTypedWritable(self, /): ...
    def upcast_to_ReferenceCount(self, /): ...
    def upcast_to_TypedWritable(self, /): ...
    view_hpr = None
    view_mat = None
    def write(): ...
class ProjectionScreen:
    ...
    class Children:
        ...
        DtoolClassDict:dict = None
        def DtoolGetSuperBase(self, /): ...
        this = None
        this_const = None
        this_metatype = None
        this_ownership = None
    DtoolClassDict:dict = None
    def DtoolGetSuperBase(self, /): ...
    FBCullCallback:int = None
    FBDrawMask:int = None
    FBEffects:int = None
    FBState:int = None
    FBTag:int = None
    FBTransform:int = None
    FB_cull_callback:int = None
    FB_draw_mask:int = None
    FB_effects:int = None
    FB_state:int = None
    FB_tag:int = None
    FB_transform:int = None
    class Parents:
        ...
        DtoolClassDict:dict = None
        def DtoolGetSuperBase(self, /): ...
        this = None
        this_const = None
        this_metatype = None
        this_ownership = None
    class Stashed:
        ...
        DtoolClassDict:dict = None
        def DtoolGetSuperBase(self, /): ...
        this = None
        this_const = None
        this_metatype = None
        this_ownership = None
    UCChildren:int = None
    UCDrawMask:int = None
    UCParents:int = None
    UCState:int = None
    UCTransform:int = None
    UC_children:int = None
    UC_draw_mask:int = None
    UC_parents:int = None
    UC_state:int = None
    UC_transform:int = None
    def addChild(): ...
    def addStashed(): ...
    def add_child(): ...
    def add_stashed(): ...
    def adjustDrawMask(): ...
    def adjust_draw_mask(): ...
    all_camera_mask = None
    def asLight(self, /): ...
    def as_light(self, /): ...
    bounds_stale = None
    bounds_type = None
    children = None
    def clearAttrib(self, object, /): ...
    def clearBounds(self, /): ...
    def clearEffect(self, object, /): ...
    def clearEffects(): ...
    def clearName(self, /): ...
    def clearPythonTag(self, object, /): ...
    def clearState(): ...
    def clearTag(): ...
    def clearTransform(): ...
    def clearUndistLut(self, /): ...
    def clearUnexpectedChange(self, object, /): ...
    def clear_attrib(self, object, /): ...
    def clear_bounds(self, /): ...
    def clear_effect(self, object, /): ...
    def clear_effects(): ...
    def clear_name(self, /): ...
    def clear_python_tag(self, object, /): ...
    def clear_state(): ...
    def clear_tag(): ...
    def clear_transform(): ...
    def clear_undist_lut(self, /): ...
    def clear_unexpected_change(self, object, /): ...
    def combineWith(self, object, /): ...
    def combine_with(self, object, /): ...
    def compareTags(self, object, /): ...
    def compare_tags(self, object, /): ...
    def copyAllProperties(self, object, /): ...
    def copyChildren(): ...
    def copySubgraph(): ...
    def copyTags(self, object, /): ...
    def copy_all_properties(self, object, /): ...
    def copy_children(): ...
    def copy_subgraph(): ...
    def copy_tags(self, object, /): ...
    def countNumDescendants(self, /): ...
    def count_num_descendants(self, /): ...
    def decodeFromBamStream(): ...
    def decode_from_bam_stream(): ...
    draw_control_mask = None
    draw_show_mask = None
    effects = None
    def encodeToBamStream(): ...
    def encode_to_bam_stream(): ...
    def fillin(): ...
    final = None
    def findChild(): ...
    def findParent(): ...
    def findStashed(): ...
    def find_child(): ...
    def find_parent(): ...
    def find_stashed(): ...
    def generateScreen(): ...
    def generate_screen(): ...
    def getAllCameraMask(): ...
    def getAttrib(self, object, /): ...
    def getAutoRecompute(self, /): ...
    def getBamModified(self, /): ...
    def getBounds(): ...
    def getBoundsType(self, /): ...
    def getChild(): ...
    def getChildSort(): ...
    def getChildren(self, /): ...
    def getClassType(): ...
    def getDrawControlMask(self, /): ...
    def getDrawShowMask(self, /): ...
    def getEffect(self, object, /): ...
    def getEffects(): ...
    def getFancyBits(): ...
    def getFrameColor(self, /): ...
    def getInternalBounds(): ...
    def getInternalVertices(): ...
    def getIntoCollideMask(self, /): ...
    def getInvertUvs(self, /): ...
    def getLastScreen(self, /): ...
    def getLegalCollideMask(self, /): ...
    def getName(self, /): ...
    def getNestedVertices(): ...
    def getNetCollideMask(): ...
    def getNetDrawControlMask(self, /): ...
    def getNetDrawShowMask(self, /): ...
    def getNumChildren(): ...
    def getNumParents(): ...
    def getNumStashed(): ...
    def getOffClipPlanes(): ...
    def getOverallBit(): ...
    def getParent(): ...
    def getParents(self, /): ...
    def getPrevTransform(): ...
    def getProjector(self, /): ...
    def getPythonTag(self, object, /): ...
    def getPythonTagKeys(self, /): ...
    def getPythonTags(self, /): ...
    def getRefCount(self, /): ...
    def getStashed(): ...
    def getStashedSort(): ...
    def getState(): ...
    def getTag(): ...
    def getTagKeys(self, /): ...
    def getTexcoord3d(self, /): ...
    def getTexcoordName(self, /): ...
    def getTransform(): ...
    def getType(self, /): ...
    def getTypeIndex(self, /): ...
    def getUndistLut(self, /): ...
    def getUnexpectedChange(self, object, /): ...
    def getVignetteColor(self, /): ...
    def getVignetteOn(self, /): ...
    def get_all_camera_mask(): ...
    def get_attrib(self, object, /): ...
    def get_auto_recompute(self, /): ...
    def get_bam_modified(self, /): ...
    def get_bounds(): ...
    def get_bounds_type(self, /): ...
    def get_child(): ...
    def get_child_sort(): ...
    def get_children(self, /): ...
    def get_class_type(): ...
    def get_draw_control_mask(self, /): ...
    def get_draw_show_mask(self, /): ...
    def get_effect(self, object, /): ...
    def get_effects(): ...
    def get_fancy_bits(): ...
    def get_frame_color(self, /): ...
    def get_internal_bounds(): ...
    def get_internal_vertices(): ...
    def get_into_collide_mask(self, /): ...
    def get_invert_uvs(self, /): ...
    def get_last_screen(self, /): ...
    def get_legal_collide_mask(self, /): ...
    def get_name(self, /): ...
    def get_nested_vertices(): ...
    def get_net_collide_mask(): ...
    def get_net_draw_control_mask(self, /): ...
    def get_net_draw_show_mask(self, /): ...
    def get_num_children(): ...
    def get_num_parents(): ...
    def get_num_stashed(): ...
    def get_off_clip_planes(): ...
    def get_overall_bit(): ...
    def get_parent(): ...
    def get_parents(self, /): ...
    def get_prev_transform(): ...
    def get_projector(self, /): ...
    def get_python_tag(self, object, /): ...
    def get_python_tag_keys(self, /): ...
    def get_python_tags(self, /): ...
    def get_ref_count(self, /): ...
    def get_stashed(): ...
    def get_stashed_sort(): ...
    def get_state(): ...
    def get_tag(): ...
    def get_tag_keys(self, /): ...
    def get_texcoord_3d(self, /): ...
    def get_texcoord_name(self, /): ...
    def get_transform(): ...
    def get_type(self, /): ...
    def get_type_index(self, /): ...
    def get_undist_lut(self, /): ...
    def get_unexpected_change(self, object, /): ...
    def get_vignette_color(self, /): ...
    def get_vignette_on(self, /): ...
    def hasAttrib(self, object, /): ...
    def hasDirtyPrevTransform(self, /): ...
    def hasEffect(self, object, /): ...
    def hasName(self, /): ...
    def hasPythonTag(self, object, /): ...
    def hasTag(): ...
    def hasTags(self, /): ...
    def hasUndistLut(self, /): ...
    def has_attrib(self, object, /): ...
    def has_dirty_prev_transform(self, /): ...
    def has_effect(self, object, /): ...
    def has_name(self, /): ...
    def has_python_tag(self, object, /): ...
    def has_tag(): ...
    def has_tags(self, /): ...
    def has_undist_lut(self, /): ...
    internal_bounds = None
    internal_vertices = None
    into_collide_mask = None
    def isAmbientLight(self, /): ...
    def isBoundsStale(self, /): ...
    def isCollisionNode(self, /): ...
    def isExactType(self, object, /): ...
    def isFinal(): ...
    def isGeomNode(self, /): ...
    def isLodNode(self, /): ...
    def isOfType(self, object, /): ...
    def isOverallHidden(self, /): ...
    def isSceneRoot(self, /): ...
    def isUnderSceneRoot(self, /): ...
    def is_ambient_light(self, /): ...
    def is_bounds_stale(self, /): ...
    def is_collision_node(self, /): ...
    def is_exact_type(self, object, /): ...
    def is_final(): ...
    def is_geom_node(self, /): ...
    def is_lod_node(self, /): ...
    def is_of_type(self, object, /): ...
    def is_overall_hidden(self, /): ...
    def is_scene_root(self, /): ...
    def is_under_scene_root(self, /): ...
    legal_collide_mask = None
    def listTags(): ...
    def list_tags(): ...
    def ls(): ...
    def makeCopy(self, /): ...
    def makeFlatMesh(): ...
    def make_copy(self, /): ...
    def make_flat_mesh(): ...
    def markBamModified(self, /): ...
    def markBoundsStale(): ...
    def markInternalBoundsStale(): ...
    def mark_bam_modified(self, /): ...
    def mark_bounds_stale(): ...
    def mark_internal_bounds_stale(): ...
    name = None
    nested_vertices = None
    def output(self, object, /): ...
    overall_bit = None
    overall_hidden = None
    parents = None
    def prepareScene(): ...
    def prepare_scene(): ...
    prev_transform = None
    python_tags = None
    def recompute(self, /): ...
    def recomputeIfStale(): ...
    def recompute_if_stale(): ...
    def ref(self, /): ...
    ref_count = None
    def regenerateScreen(): ...
    def regenerate_screen(): ...
    def removeAllChildren(): ...
    def removeChild(): ...
    def removeStashed(): ...
    def remove_all_children(): ...
    def remove_child(): ...
    def remove_stashed(): ...
    def replaceChild(): ...
    def replaceNode(self, object, /): ...
    def replace_child(): ...
    def replace_node(self, object, /): ...
    def resetAllPrevTransform(): ...
    def resetPrevTransform(): ...
    def reset_all_prev_transform(): ...
    def reset_prev_transform(): ...
    def setAttrib(): ...
    def setAutoRecompute(self, object, /): ...
    def setBound(self, object, /): ...
    def setBounds(self, object, /): ...
    def setBoundsType(self, object, /): ...
    def setEffect(self, object, /): ...
    def setEffects(): ...
    def setFinal(self, object, /): ...
    def setFrameColor(self, object, /): ...
    def setIntoCollideMask(self, object, /): ...
    def setInvertUvs(self, object, /): ...
    def setName(self, object, /): ...
    def setOverallHidden(self, object, /): ...
    def setPrevTransform(): ...
    def setProjector(self, object, /): ...
    def setPythonTag(): ...
    def setState(): ...
    def setTag(): ...
    def setTexcoord3d(self, object, /): ...
    def setTexcoordName(self, object, /): ...
    def setTransform(): ...
    def setUndistLut(self, object, /): ...
    def setUnexpectedChange(self, object, /): ...
    def setVignetteColor(self, object, /): ...
    def setVignetteOn(self, object, /): ...
    def set_attrib(): ...
    def set_auto_recompute(self, object, /): ...
    def set_bound(self, object, /): ...
    def set_bounds(self, object, /): ...
    def set_bounds_type(self, object, /): ...
    def set_effect(self, object, /): ...
    def set_effects(): ...
    def set_final(self, object, /): ...
    def set_frame_color(self, object, /): ...
    def set_into_collide_mask(self, object, /): ...
    def set_invert_uvs(self, object, /): ...
    def set_name(self, object, /): ...
    def set_overall_hidden(self, object, /): ...
    def set_prev_transform(): ...
    def set_projector(self, object, /): ...
    def set_python_tag(): ...
    def set_state(): ...
    def set_tag(): ...
    def set_texcoord_3d(self, object, /): ...
    def set_texcoord_name(self, object, /): ...
    def set_transform(): ...
    def set_undist_lut(self, object, /): ...
    def set_unexpected_change(self, object, /): ...
    def set_vignette_color(self, object, /): ...
    def set_vignette_on(self, object, /): ...
    def stashChild(): ...
    def stash_child(): ...
    stashed = None
    state = None
    def stealChildren(): ...
    def steal_children(): ...
    tags = None
    def testRefCountIntegrity(self, /): ...
    def testRefCountNonzero(self, /): ...
    def test_ref_count_integrity(self, /): ...
    def test_ref_count_nonzero(self, /): ...
    this = None
    this_const = None
    this_metatype = None
    this_ownership = None
    transform = None
    type = None
    def unref(self, /): ...
    def unstashChild(): ...
    def unstash_child(): ...
    def upcastToNamable(self, /): ...
    def upcastToReferenceCount(self, /): ...
    def upcastToTypedWritable(self, /): ...
    def upcastToTypedWritableReferenceCount(self, /): ...
    def upcast_to_Namable(self, /): ...
    def upcast_to_ReferenceCount(self, /): ...
    def upcast_to_TypedWritable(self, /): ...
    def upcast_to_TypedWritableReferenceCount(self, /): ...
    def write(): ...
